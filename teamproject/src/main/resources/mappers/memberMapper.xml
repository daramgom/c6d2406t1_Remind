<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.mapper.MemberMapper">
	<!-- namespace를 사용해서 mapper 파일을 찾아오는 주소 설정 -->

	<!-- 시간정보 조회 -->
	<!-- <select id="getTime" resultType="string"> select now() </select> -->

	<!-- 회원가입 -->
	<!-- userid 컬럼명. -->
	<insert id="insertMember">
		insert into member
		(member_id,member_pw,member_name,member_email,member_tel,employee_rank,create_date,update_date,permission_id,member_code,
		member_state,approval_status,department_id, company_status)
		values(#{member_id},#{member_pw},#{member_name},#{member_email},#{member_tel},'01',
		now(),now(),'01',1,'01','01',0, '01');
	</insert>
	<!-- userid 컬럼명. -->
	
	<!-- 거래처 회원가입  -->
	<insert id="insertCompanyMember">
		insert into member
		(member_id,member_pw,member_name,member_email,member_tel,employee_rank,create_date,update_date,permission_id,member_code,
		member_state,approval_status,department_id, company_status)
		values(#{member_id},#{member_pw},#{member_name},#{member_email},#{member_tel},'00',
		now(),now(),'01',#{member_code},'01','02',0, #{company_status});
	</insert>

	<!-- 로그인 체크 -->
	<!-- <select id="loginMember" resultType="com.itwillbs.domain.MemberVO"> 
		select * from tbl_member where userid=#{userid} and userpw=#{userpw} </select> -->

	<!-- 로그인 체크 -->
	<select id="loginMember" resultType="MemberVO">
		select * from member
		where
		member_id=#{member_id}
	</select>

	<!-- 회원정보 조회 -->
	<select id="getMemberId" resultType="MemberVO">
		select * from member
		where
		member_id=#{member_id}
	</select>

	<!-- 회원정보 조회 -->
	<select id="getMemberEmail" resultType="MemberVO">
		select * from member
		where member_email=#{member_email}
	</select>

	<!-- 회원정보 조회 -->
	<select id="getMemberTel" resultType="MemberVO">
		select * from member
		where
		member_tel=#{tel}
	</select>

	<!-- 회원정보 수정 -->
	<update id="updateMember">
		update member
		set update_date = now(),
		department_id = #{department_id},
		member_state = #{member_state},
		employee_rank = #{employee_rank}
		where member_id = #{member_id}
	</update>
	
	<update id="updateMemberName">
	update member
		set update_date = now(),
		member_name = #{member_name}
		where member_id = #{member_id}
	</update>
	
	<update id="updateMemberEmail">
	update member
		set update_date = now(),
		member_email = #{member_email}
		where member_id = #{member_id}
	</update>
	<update id="updateMemberTel">
	update member
		set update_date = now(),
		member_tel = #{member_tel}
		where member_id = #{member_id}
	</update>
	
	<update id="updatePermission">
	update member
		set update_date = now(),
		permission_id = #{permission_id}
		where member_id = #{member_id}
	</update>
	
	
	
	

	<!-- 퇴사처리 회원정보 삭제 -->
	<update id="deleteMember">update member set member_state = #{member_state}
		where member_id=#{member_id} </update>

	<!-- admin 회원정보 전체 목록(list) -->
	<select id="getMemberList" resultType="MemberVO">
		SELECT
    m.member_id,
    m.member_pw,
    m.member_name,
    m.member_email,
    m.member_tel,
    m.department_id,
    m.employee_rank,
    m.create_date,
    m.update_date,
    m.permission_id,
    m.member_state,
    m.approval_status,
    c3_emp.common_status AS employee_rank_value,
    c3_perm.common_status AS permission_id_value
FROM
    member m
LEFT JOIN
    common c3_emp ON m.employee_rank = c3_emp.common_value AND c3_emp.common_work = 'emp_rank'
LEFT JOIN
    common c3_perm ON m.permission_id = c3_perm.common_value AND c3_perm.common_work = 'permission_id'
WHERE
    m.member_state != (
        SELECT common_value
        FROM common
        WHERE common_status = '퇴사' AND common_work = 'member_state'
    ) 
    AND m.approval_status != '01' AND member_code = '1' and member_id != #{member_id};
	</select>

	<!-- 회원가입 대기자 목록 -->
	<select id="getWaitingMember" resultType="MemberVO">
		SELECT
		*
		FROM
		member
		where
		approval_status = "01"
	</select>

	<!-- 특정 회원정보 -->
	<select id="getMemberById" resultType="MemberVO">
		SELECT
		*
		FROM
		member
		WHERE member_id = #{member_id}
	</select>

	<select id="getEmp_rank" resultType="map">
		SELECT common_value,
		common_status FROM common WHERE common_work = "emp_rank" ORDER BY
		common_value ASC;
	</select>
	<select id="getApproval" resultType="map">
		SELECT common_value,
		common_status FROM common WHERE common_work = 'approval_status' ORDER
		BY common_value ASC;
	</select>

	<select id="getDepartment" resultType="map">
		SELECT department_id, department_name
		FROM departments
		ORDER BY department_id ASC;
	</select>

	<select id="getMemberState" resultType="map">
		SELECT common_value,
		common_status FROM common WHERE common_work = 'member_state' ORDER BY
		common_value ASC
	</select>


	<!-- admin 회원가입 신청 승인  -->
	<update id="UpdateMembers">
		update member set department_id = #{department_id} , employee_rank = #{employee_rank} , approval_status = "02"
		where member_id=#{member_id}
	</update>
	
	<delete id="deleteMembers">
		delete from member where member_id = #{member_id}
	</delete>
	
	<select id="memberCodeCheck" resultType="MemberVO">
		select *
		from member where member_code = #{company_code}
	</select>
	
	<update id="updatePw">
		update member
		set update_date = now(),
		member_pw = #{member_pw}
		where member_id = #{member_id}
	</update>
	
	
	<select id="getMemberIdEmailSearch" resultType="MemberVO">
		select * from member where member_id = #{member_id} AND member_email = #{member_email}
	</select>



</mapper>